{"version":3,"file":"static/css/main.d9b39e9b.css","mappings":"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","sources":["index.css","App.css","components/Spotlight.css","components/Spotlight.scss","components/breakpoints.scss","components/ProjectCard.scss","components/ProjectsList.css","components/About.css","components/Nav.css","components/Contact.css","components/Footer.css"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n.portfolio {\n  width: 90%;\n  margin: auto;\n  /* background: rgb(219, 218, 216); */\n  /* box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3); */\n  background: transparent;\n  padding: 3%;\n  box-sizing: border-box;\n}",".App {\n  text-align: center;\n}\n\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n","@import url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@600&display=swap');\n/* @import url('https://fonts.googleapis.com/css2?family=Raleway:wght@300&display=swap'); */\n@import url('https://fonts.googleapis.com/css2?family=Merriweather&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@800&display=swap');\n\n.spotlight {\n    max-height: 70vh;\n    /* position: relative; */\n    /* top: 200px; */\n    /* margin: 125px 150px 50px; */\n    padding-top: 120px;\n    /* width: 100%; */\n    margin: 0 auto 50px;\n    \n    \n}\n\n.spotlightContent {\n    display: flex;\n    padding-bottom: 10px;\n    background: #fff;\n    border-radius: 20px;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n    border: none;\n    height: 250px;\n    width: 100%;\n    \n    /* max-height: 70vh; */\n    \n}\n/* .repoHighlight {\n    display: flex;\n    flex: 0.35;\n    align-items: center;\n    justify-content: center;  \n}\n.repoContainer {\n    border-radius: 20px;\n    overflow: hidden;\n    display: flex;\n    margin-right: 15px;\n    background-color: black;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n}\n.selectedRepo {\n    object-fit: contain;\n    max-width: min(30vw, 40vh);\n    max-height: 30vw;\n} */\n.repoDetails {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    flex: 0.65;\n    color: black;\n    \n}\n\n\n/* .title {\n    font-size: 40px;\n    color: black;\n    font-family: 'Raleway', sans-serif;\n    font-weight: 900;\n \n} */\n/* .itemDescription{\n    font-size: 20px;\n    align-self: center;\n    color: black;\n   \n} */\n.owner {\n    display: flex;\n    margin: 10px 0;\n    height: 50px;\n}\n.owner > div {\n    margin: 0 5px;\n}\n.ownerImageContainer {\n    height: 50px;\n    width: 50px;\n    border-radius: 50%;\n    border-radius: 50px;\n    overflow: hidden;\n    /* object-fit: scale-down; */\n    /* object-fit: contain; */\n}\n/* .ownerImageContainer > img {\n    height: 100%;\n    width: 100%;\n} */\n/* .projectDetails {\n    display: flex;\n    align-self: center;\n    flex: 0.4;\n    padding-left: 5%;\n} */\n.link {\n    display: flex;\n    /* flex-direction: column; */\n    align-content: center;\n    justify-content: space-evenly;\n    align-self: center;\n}\n\n/* .icon {\n    padding: 10px;\n    background-color: black;\n    border-radius: 50%;\n    color: white;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n} */\n\n/* .test {\n    display: flex;\n    align-self: center;\n    padding: 3px;\n    font-family: 'Raleway', sans-serif;\n    font-weight: 500;\n} */\n/* .test > a {\n    text-decoration: none;\n    font-family: 'Cormorant Garamond', serif;\n    color: black;\n    \n} */\n\n@media only screen and (max-width: 600px) {\n    .spotlight {\n        margin: 0 auto 10px;\n     \n    }\n    /* .repoHighlight {\n        display: none;\n    } */\n    .spotlightContent {\n        flex-direction: column;\n    }\n    .projectLinkAndHandle {\n        display: flex;\n    }\n    .title, .itemDescription {\n        margin: 0 auto;\n        padding: 10px;\n    }\n    \n}\n\n@media only screen and (max-width: 768px) {\n/* For mobile phones: */\n/* [class*=\"col-\"] {\n    width: 100%;\n} */\n.itemDescription {\n    /* overflow: scroll; */\n    /* font-size: 12px; */\n}\n\n}","@import './breakpoints.scss';\n$breakpoints: (phone: 320px, phone2:480px, tablet: 768px, desktop: 1024px);\n\n.repoHighlight {\n    display: flex;\n    flex: 0.35;\n    align-items: center;\n    justify-content: center; \n    padding-left: 15px;\n\n    @include media('<phone2') {\n        display: none;\n       \n    }\n\n    @include media('>phone2', \"<=tablet\") {\n        flex: 0.30;\n    }\n}\n.repoContainer {\n    border-radius: 20px;\n    overflow: hidden;\n    display: flex;\n    margin-right: 15px;\n    background-color: black;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n}\n.selectedRepo {\n    object-fit: contain;\n    max-width: min(35vw, 40vh);\n    max-height: 35vw;\n\n    @include media('>phone2', \"<=tablet\") {\n        max-width: min(25vw, 30vh);\n        max-height: 25vw;\n        // height: 300px;\n    }\n}\n\n\n\n\n\n\n\n.title {\n    font-size: 40px;\n    color: black;\n    font-family: 'Raleway', sans-serif;\n    font-weight: 900;\n\n    @include media('<phone') {\n        font-size: 25px;\n        font-weight: 600;\n        padding-bottom: 0px;\n    }\n    @include media('<phone2') {\n        font-size: 32px;\n        padding-bottom: 0px;\n    }\n \n}\n\n.itemDescription{\n    font-size: 20px;\n    align-self: center;\n    color: black;\n    overflow: scroll;\n    @include media('<phone') {\n        margin: 0 auto;\n        padding: 10px;\n        font-size: 12px;\n    }\n\n    @include media('<phone2') {\n        font-size: 14px;\n    }\n   \n}\n\n\n.projectDetails {\n    display: flex;\n    align-self: center;\n    flex: 0.4;\n    padding-left: 5%;\n\n    @include media('<phone') {\n        padding-left: 2%;\n    }\n}\n\n.icon {\n    padding: 10px;\n    background-color: black;\n    border-radius: 50%;\n    color: white;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n\n    @include media('<phone') {  \n        padding: 2px;\n        font-size: small !important;\n    }\n    \n    @include media('<phone2') {  \n        padding: 8px;\n    }\n\n    @include media('>=phone2', '<=tablet') {\n        padding: 10px;\n    }\n}\n\n.test {\n    display: flex;\n    align-self: center;\n    padding: 3px;\n    font-family: 'Raleway', sans-serif;\n    font-weight: 500;\n}\n\n.test > a {\n    text-decoration: none;\n    font-family: 'Cormorant Garamond', serif;\n    color: black;\n    @include media('<phone') {\n        font-size: 13px;\n    }\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'phone2':480px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}","@import './breakpoints.scss';\n$breakpoints: (phone: 320px, phone2:480px, tablet: 768px, desktop: 1024px);\n$color: white;\n\n.collectionCard {\n    color: rgb(255, 255, 255);\n    background-color: #1a1c1e;\n    border-radius: 20px;\n    width: 300px;\n    height: 345px;\n    overflow: hidden;\n    margin: 5px;\n    /* margin-right: 30px; */\n    box-sizing: border-box;\n\n    @include media(\"<phone2\") {\n        height: 230px;\n        width: 180px;   \n    }\n    @include media(\">phone2\", \"<=tablet\") {\n        height: 230px;\n        width: 180px;\n    }\n\n   \n}\n\n.name {\n    padding-top: 1px;\n    text-align: center;\n    font-size: 30px;\n    color: $color;\n    &:hover {\n        color: blue;\n    }\n    @include media(\"<phone\", \"<=tablet\") {\n        font-size: 22px;\n        padding-top: 8px;\n        font-weight: 700;\n    }\n}\n\n.collectionCard > img {\n    height: 80%;\n    width: 100%;\n    &:hover {\n        height: 100%;\n    }\n   \n}",".listContainer {\n    background: #fff;\n    padding: 2%;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n    border-radius: 20px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n.reposList {\n    display: flex;\n    cursor: pointer;\n    overflow: scroll;\n    box-sizing: border-box;\n    /* position: relative; */\n    /* top: 250px; */\n\n    /* background: #fff;\n    padding: 2%;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n    border-radius: 20px; */\n}\n.scrollArrows {\n    text-align: center;\n    padding: 1%;\n    box-sizing: border-box;\n}\n\n@media only screen and (max-width: 600px) {\n    .reposList {\n        height: 250px;\n    }\n}","@import url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@600&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@300&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Merriweather&display=swap');\n/* ABOUT */\n#about {\n    background-color: rgba(223, 221, 217, 0.9);\n    background: #fff;\n    display: flex;\n    /* flex-direction: column;   */\n    justify-content: center; \n    align-items: center; \n    padding: 60px 15px 30px 15px;\n    /* padding-bottom: 30px; */\n    /* position: relative;         ????????????*/  \n    /* position: relative; */\n    /* top: 100px; */\n    width: 90%;\n    margin: 130px auto 5px auto;\n    font-size: 20px;\n    line-height: 140%; \n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n  \n  }\n  \n  .bio {\n    flex: 0.6;\n    padding: 3%;\n  }\n\n  .contactMe {\n    flex: 0.4;\n    font-size: 20px;\n    line-height: 140%;\n    font-family: 'Cormorant Garamond', serif;\n    padding: 3%;\n    display: flex;\n    flex-direction: column;\n    \n  }\n \n  .info {\n    color: white;\n    text-align: center;\n    width: 80%;\n    font-size: 20px;\n    line-height: 140%;\n    color: rgb(146, 37, 37);\n    text-shadow: 1px 1px rgb(54, 11, 11);\n    /* position: relative; */\n    /* top: -25px; */\n  }\n  \n  .portrait {\n    height: 100%;\n    /* height: 300px; */\n    border-radius: 35%;\n    width: 80%;\n    object-fit: cover;\n    padding: 0 10%;\n    /* box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3); */\n\n  \n    /* margin-top: 25px; */\n  }\n\n  .invite {\n    /* width: 80%; */\n    /* padding: 0 20%; */\n    text-align: center;\n  }\n\n  h2 {\n    /* font-family: 'Cormorant Garamond', serif; */\n    font-family: 'Raleway', sans-serif;\n  }\n\n  h3, p {\n    /* font-family: 'Merriweather', serif; */\n    font-family: 'Cormorant Garamond', serif;\n    font-family: 'Raleway', sans-serif;\n  }\n\n  @media only screen and (max-width: 600px) {\n    #about {\n      flex-direction: column;\n      font-size: 15px;\n    }\n\n    h2, h3 {\n      text-align: center;\n      /* margin: 7px 0; */\n    }\n\n    .contactMe {\n      font-size: 15px;\n    }\n}","\nnav {\n    position: fixed;\n    background-color: black;\n    top: 0;\n    width: 100%;\n    display: flex;     /* vertical aligned items to horizontal alignment */\n    justify-content: space-between;\n    align-items: center;   /* aligns items vertically */\n    height: 100px;\n    color: white;  \n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n   \n}\n\nbody {\n    /* background-color: pink; */\n    /* background-color: black; */\n    background: #eee;\n}\n\nnav > div {\n    margin: 10px;\n}\n\n.headerItems {\n    display: flex;\n} \n\n.headerItems > p {\n    margin: 10px;\n}\n\n.headerItems > p > a {\n    text-decoration: none;\n    color: white;\n    font-family: 'Raleway', sans-serif;\n    font-weight: 600;\n}\n\n.Nav-logo {\n    /* color: #3a869b; */\n    font-family: 'Comic Sans MS', 'Comic Sans';\n    font-weight: 600;\n    text-shadow: 1px 1px rgb(34, 51, 109);\n    font-size: 24px;\n    padding-left: 20px;\n    flex: 1;\n}\n\n.darkModeContainer {\n    background-color: #1c1c1e;\n    border-radius: 50%;\n    padding: 10px;\n}\n\n.darkModeContainer > img {\n    height: 25px;\n}\n\n.actionButton {\n    background: linear-gradient(to right, #59f9b7, #66feea);\n    padding: 15px 40px;\n    border-radius: 50px;\n    color: black;\n    text-decoration: none;\n}\n\n","#contact {\n    background: #fff;\n    display: flex;\n    flex-direction: column;  \n    justify-content: center; \n    align-items: center; \n    padding: 60px 15px 30px 15px;\n    /* padding-bottom: 30px; */\n    /* position: relative;         ????????????*/  \n    /* position: relative; */\n    /* top: 100px; */\n    width: 90%;\n    margin: 140px auto 150px auto;\n    font-size: 20px;\n    line-height: 140%; \n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n  \n  }\n\n  .social { \n      display: flex;\n      list-style-type: none;\n  }\n\n.social > li {\n    padding: 18px;\n    margin: 15px;\n    font-size: 80px;\n    background: rgb(44, 43, 43);\n    border-radius: 50%;\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\n}\n.social > li > a {\n    color: white;\n\n}\n.linkedIn_icon:hover {\n    color: royalblue;\n}\n.email_icon:hover {\n    color: lightblue;\n}\n.gitHub_icon:hover {\n    color: gray;\n}","footer {\n    background-color: black;\n    color: white;\n    text-align: center;\n    /* line-height: 2.5rem; */\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    font-size: 1.3rem;\n}"],"names":[],"sourceRoot":""}